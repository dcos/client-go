// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InstallRequest install request
// swagger:model installRequest
type InstallRequest struct {

	// app Id
	AppID string `json:"appId,omitempty"`

	// options
	Options interface{} `json:"options,omitempty"`

	// package name
	// Required: true
	PackageName *string `json:"packageName"`

	// package version
	PackageVersion string `json:"packageVersion,omitempty"`
}

// Validate validates this install request
func (m *InstallRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePackageName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InstallRequest) validatePackageName(formats strfmt.Registry) error {

	if err := validate.Required("packageName", "body", m.PackageName); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InstallRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InstallRequest) UnmarshalBinary(b []byte) error {
	var res InstallRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
