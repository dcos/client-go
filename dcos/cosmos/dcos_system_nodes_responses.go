// Code generated by go-swagger; DO NOT EDIT.

package cosmos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	types "github.com/dcos/client-go/dcos/cosmos/types"
)

// DCOSSystemNodesReader is a Reader for the DCOSSystemNodes structure.
type DCOSSystemNodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DCOSSystemNodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDCOSSystemNodesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewDCOSSystemNodesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDCOSSystemNodesOK creates a DCOSSystemNodesOK with default headers values
func NewDCOSSystemNodesOK() *DCOSSystemNodesOK {
	return &DCOSSystemNodesOK{}
}

/*DCOSSystemNodesOK handles this case with default header values.

The nodes.
*/
type DCOSSystemNodesOK struct {
	Payload *types.SystemNodes
}

func (o *DCOSSystemNodesOK) Error() string {
	return fmt.Sprintf("[GET /system/health/v1/nodes][%d] dcosSystemNodesOK  %+v", 200, o.Payload)
}

func (o *DCOSSystemNodesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(types.SystemNodes)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDCOSSystemNodesDefault creates a DCOSSystemNodesDefault with default headers values
func NewDCOSSystemNodesDefault(code int) *DCOSSystemNodesDefault {
	return &DCOSSystemNodesDefault{
		_statusCode: code,
	}
}

/*DCOSSystemNodesDefault handles this case with default header values.

Unexpected error.
*/
type DCOSSystemNodesDefault struct {
	_statusCode int

	Payload *types.Error
}

// Code gets the status code for the dcos system nodes default response
func (o *DCOSSystemNodesDefault) Code() int {
	return o._statusCode
}

func (o *DCOSSystemNodesDefault) Error() string {
	return fmt.Sprintf("[GET /system/health/v1/nodes][%d] dcos-system-nodes default  %+v", o._statusCode, o.Payload)
}

func (o *DCOSSystemNodesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(types.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
